(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{391:function(_,s,t){"use strict";t.r(s);var v=t(45),e=Object(v.a)({},(function(){var _=this,s=_.$createElement,t=_._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"tcp-的三次握手和四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的三次握手和四次挥手"}},[_._v("#")]),_._v(" TCP 的三次握手和四次挥手")]),_._v(" "),t("p",[_._v('第一次握手：客户端将含有“同步序列号(SYN)"的数据段发送给服务端请求连接。')]),_._v(" "),t("p",[_._v("第二次握手:  服务端将带有“确认应答的(ACK)和 同步序列号(SYN)”数据段给客户端")]),_._v(" "),t("p",[_._v("第三次握手：客户端接收到数据后，发送一个数据段确认收到服务端的数据段，服务器收到数据确认无误后开始传送实际数据。")]),_._v(" "),t("p",[_._v("四次挥手")]),_._v(" "),t("p",[_._v("第一次挥手：客户端发送一个FIN包给服务端，用来关闭客户端到服务器的数据传送，客户端进入fin_waite 状态。")]),_._v(" "),t("p",[_._v("第二次挥手：服务端收到FIN后，返回一个ACK给客户端，同时，将seq的值+1作为确认序号，服务端进入close_waite.")]),_._v(" "),t("p",[_._v("第三次挥手：服务端发送FIN和一个值为n的seq给客户端，用来关闭服务端的数据传输，服务端进入last_waite状态")]),_._v(" "),t("p",[_._v("第四次挥手：客户端收到FIN后，客户端进入time_waite状态，接着发送一个ACK和一个值为n+1的seq给服务端，服务端进入close状态，，完成四次挥手。")]),_._v(" "),t("h2",{attrs:{id:"xss-和-csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss-和-csrf"}},[_._v("#")]),_._v(" XSS 和 CSRF")]),_._v(" "),t("h3",{attrs:{id:"xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[_._v("#")]),_._v(" XSS")]),_._v(" "),t("p",[t("strong",[_._v("跨站脚本(Cross-site scripting) 攻击")]),_._v("，指攻击者在网站上注入恶意的客户端代码，通过恶意脚本对客户端网页进行篡改，而在用户浏览网页时，对用户浏览器进行控制或者获取用户隐私的一种攻击方式。")]),_._v(" "),t("p",[t("strong",[_._v("类型：反射性、存储型、基于DOM")])]),_._v(" "),t("p",[t("strong",[_._v("反射性：用户输入的数据“反射”给浏览器")])]),_._v(" "),t("p",[_._v("​          这种攻击方式需要攻击者引诱用户点击一个恶意链接、提交表单时，注入脚本进入被攻击者的网站，进行攻击或者获取用户隐私数据。")]),_._v(" "),t("p",[_._v("**存储型：**"),t("strong",[_._v("把用户输入的数据存储在服务器端，当浏览器请求数据时，脚本从服务器上传回并执行。")])]),_._v(" "),t("p",[_._v("​     场景：攻击者在社区或论坛中写下一片包含恶意的js代码的文章或评论，发表后，所有访问该文章或评论的用户，都会在他们的浏览器中执行这段恶意代码。")]),_._v(" "),t("p",[t("strong",[_._v("DOM型：指通过恶意脚本修改页面的DOM结构，发生在客户端。")])]),_._v(" "),t("p",[_._v("DOM型跟前两型的区别，DOM由浏览器端完成，属于前端js自身的安全漏洞，前两种属于服务端的安全漏洞")]),_._v(" "),t("h3",{attrs:{id:"xss的防范措施"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss的防范措施"}},[_._v("#")]),_._v(" XSS的防范措施")]),_._v(" "),t("ul",[t("li",[_._v("HttpOnly防止截取Cookie")]),_._v(" "),t("li",[_._v("数据检查。无论在前端还是在服务端，都要对用户数据进行转码或过滤")]),_._v(" "),t("li",[_._v("利用CSP(浏览器内容安全策略)，由服务端决定浏览器加载渲染哪些内容，限制其他域域名的资源加载，禁止向其他域提交数据，提供上报机制")])]),_._v(" "),t("h3",{attrs:{id:"csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[_._v("#")]),_._v(" CSRF")]),_._v(" "),t("p",[_._v("**跨站请求伪造(Cross Site Request Forgery),**是一种劫持受信任用户向服务器发送非预期请求的攻击方式。")]),_._v(" "),t("p",[_._v("CSRF是攻击者诱导用户进入第三方网站，在第三方网站中向被攻击网站发送跨站请求，利用用户目前的登录状态发起跨站请求。")]),_._v(" "),t("p",[_._v("攻击类型")]),_._v(" "),t("ol",[t("li",[_._v("GET l类型的CSRF。只需要一个HTTP请求")])]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("http://www.c.com:8002/content/delete/:id\n")])])]),t("p",[_._v("在用户访问的时候会自动发送一个包函用户登录信息的GET请求")]),_._v(" "),t("p",[_._v("2.POST类型的CSRF。通常使用一个自动提交的表单，访问该页面的后，表单会自动提交，相当于模拟用户完成POST请求")]),_._v(" "),t("p",[_._v("3.链接类型的CSRF。")]),_._v(" "),t("p",[t("strong",[_._v("CSRF 攻击不需要将恶意代码注入用户当前页面的 HTML 文档中，而是直接跳转新的页面，利用服务器的验证漏洞和用户之前的登录状态俩模拟用户进行操作")])]),_._v(" "),t("p",[_._v("​")]),_._v(" "),t("h3",{attrs:{id:"csrf防范措施"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf防范措施"}},[_._v("#")]),_._v(" CSRF防范措施")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("验证码。强制用户跟应用进行交互")]),_._v(" "),t("p",[_._v("不能给网站所有的操作都加上验证码，所以只是一种辅助手段")])]),_._v(" "),t("li",[t("p",[_._v("Referer Check")]),_._v(" "),t("p",[_._v("在HTTP头中有个Referer,记录该HTTP请求的来源地址，通过检查Referer，可以检查请求是否来自合法的“源”")])]),_._v(" "),t("li",[t("p",[_._v("添加Token验证")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);