(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{379:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"凉经"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#凉经"}},[t._v("#")]),t._v(" 凉经")]),t._v(" "),a("h2",{attrs:{id:"react-父子组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-父子组件通信"}},[t._v("#")]),t._v(" React 父子组件通信")]),t._v(" "),a("p",[a("strong",[t._v("1.父组件向子组件传参：")])]),t._v(" "),a("p",[t._v("父子间通过属性的方式传递参数，")]),t._v(" "),a("p",[t._v("子组件通过this.props.（值或方法）来接收父组件传递")]),t._v(" "),a("p",[t._v("父组件中：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                name: 'yjj',\n                age: 18\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n            //将父组件中的userInfo传递给子组件\n                <Person info={this.state.userInfo}></Person>\n                <div onClick={()=> console.log(this.state.userInfo)}>点我打印userinfo对象</div>\n            </div>\n        );\n    }\n\n")])])]),a("p",[t._v("子组件中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("　render() {\n        this.props.info.age = 25\n        return (\n            <div>\n               \n                <div>姓名：{this.props.info.name}</div>\n                <div>年龄：{this.props.info.age}</div>\n            </div>\n        )\n    }\n")])])]),a("p",[t._v("父组件中定义了一个userInfo对象，并且将该对象的值作为info属性传入到子组件。子组件中对this.props.info对象的age属性重新赋值，由于子组件的this.props.info对象指向的指针和父组件中的userInfo对象的指针是一样的。所以父组件中的userInfo对象的age属性实际上也是改变了的，等于25。但是在react中state的值需要使用setState()方法修改，所以不会重新渲染对应的组件。")]),t._v(" "),a("p",[a("strong",[t._v("2.子组件向父组件传值")])]),t._v(" "),a("p",[t._v("实际上就是通过父组件给子组件传递的属性值为函数，子组件在相应的情况下调用该函数。this.props.父组件的方法")]),t._v(" "),a("p",[t._v("父组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('　constructor(props) {\n        super(props)\n        this.state = {\n            age: 18\n        }\n    }\n    changeAge = () => {\n        this.setState({\n            age: 20\n        })\n    }\n    render() {\n        return (\n            <div className="App">\n                 //把changeAge方法传递给子组件\n                <Person changeAgeEvent={this.changeAge}></Person>\n                <div>当前年龄：{this.state.age}</div>\n            </div>\n        );\n    }\n\n')])])]),a("p",[t._v("子组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   render() {return (\n            <div>\n                <div onClick={() => {this.props.changeAgeEvent()}}>点我改变年龄的值</div>\n            </div>\n        )\n    }\n")])])]),a("p",[t._v("父组件的changeAgeEvent的值为this.changeAge函数，在子组件中使用this.props.changeEvent（）调用父组件的函数。")]),t._v(" "),a("h2",{attrs:{id:"vue阻止事件冒泡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue阻止事件冒泡"}},[t._v("#")]),t._v(" vue阻止事件冒泡")]),t._v(" "),a("ol",[a("li",[t._v("click.stop()")]),t._v(" "),a("li",[t._v('事件对象 $event         @click="on($event)')])]),t._v(" "),a("h2",{attrs:{id:"画圆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画圆"}},[t._v("#")]),t._v(" 画圆")]),t._v(" "),a("p",[t._v("border-radius")]),t._v(" "),a("p",[t._v("数组删除首位元素  Array.shift(),添加 Array.unshift()")]),t._v(" "),a("h2",{attrs:{id:"深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),a("p",[t._v("深拷贝就是完全拷贝，值跟内存地址都拷贝")]),t._v(" "),a("p",[t._v("实现方案："),a("strong",[t._v("1.JSON.stringify/parse")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("缺点：")]),t._v(" "),a("p",[t._v("1.无法解决循环引用的问题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("拷贝a会出现系统栈溢出，出现无限递归的情况")]),t._v(" "),a("p",[t._v("2.无法拷贝一些特殊的对象，例如：正则，Date,Set、Map")]),t._v(" "),a("p",[t._v("3.无法拷贝函数")]),t._v(" "),a("p",[t._v("递归实现深拷贝")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cloneObj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断赋值目标是数组还是对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("haxOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cloneObj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"去除数组中的不同类型的元素-null-underfind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除数组中的不同类型的元素-null-underfind"}},[t._v("#")]),t._v(" 去除数组中的不同类型的元素，(null, underfind)")]),t._v(" "),a("p",[t._v("创建一个空数组，遍历数组，typeof  元素=='number' ，是就push到空数组")]),t._v(" "),a("h2",{attrs:{id:"koa2-cors-请求跨域怎么设置的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#koa2-cors-请求跨域怎么设置的"}},[t._v("#")]),t._v(" koa2-cors 请求跨域怎么设置的")]),t._v(" "),a("p",[t._v("安装koa2-cors，引入，use，在user.js 中把get请求变成post请求")]),t._v(" "),a("p",[t._v("在use里面配置异步配置")]),t._v(" "),a("h2",{attrs:{id:"http常见状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http常见状态码"}},[t._v("#")]),t._v(" HTTP常见状态码")]),t._v(" "),a("p",[t._v("100：")]),t._v(" "),a("p",[t._v("200：成功")]),t._v(" "),a("p",[t._v("204 ：No Content 请求成功但没有资源可返回")]),t._v(" "),a("p",[t._v("206:  Partial Content  请求 部分内容")]),t._v(" "),a("p",[t._v("301： 永久性重定向、")]),t._v(" "),a("p",[t._v("302：临时重定向")]),t._v(" "),a("p",[t._v("304：服务端已经执行了GET，但文件未变化。")]),t._v(" "),a("p",[t._v("400：错误请求")]),t._v(" "),a("p",[t._v("401：缺少认证信息")]),t._v(" "),a("p",[t._v("403：禁止访问")]),t._v(" "),a("p",[t._v("404：请求失败或未找到")]),t._v(" "),a("p",[t._v("500：服务器异常")]),t._v(" "),a("p",[t._v("503：服务器繁忙")]),t._v(" "),a("h2",{attrs:{id:"伪元素和伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪元素和伪类"}},[t._v("#")]),t._v(" 伪元素和伪类")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic2.zhimg.com/80/v2-a85036113478c3bc36062f76ef8e66bd_720w.jpg",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic4.zhimg.com/80/v2-e44eab840072dc00011854928fb0bcaf_720w.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"html5-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html5-新特性"}},[t._v("#")]),t._v(" html5 新特性")]),t._v(" "),a("p",[t._v("语义化标签：nav , header,footer,aside,section,")]),t._v(" "),a("p",[t._v("表单元素：required , placeholder,min,max,height,width")]),t._v(" "),a("p",[t._v("视频和音频：audio,video")]),t._v(" "),a("p",[t._v("Canvas图形")]),t._v(" "),a("h2",{attrs:{id:"箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),a("p",[t._v("1.没有this，需要通过查找作用域链来确定this,this 始终指向函数声明时所在的作用域下this的值")]),t._v(" "),a("p",[t._v("2.没有argument对象")]),t._v(" "),a("p",[t._v("3.不能通过new关键词调用")]),t._v(" "),a("p",[t._v("4.没有原型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Bar")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("p",[t._v("5.没有super")]),t._v(" "),a("h2",{attrs:{id:"css3-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3-新特性"}},[t._v("#")]),t._v(" CSS3 新特性")]),t._v(" "),a("p",[t._v("1.边框"),a("br"),t._v("\nborder-image边框图片\nborder-radius圆角")]),t._v(" "),a("p",[t._v("2.阴影\nbox-shadow盒子阴影")]),t._v(" "),a("p",[t._v("3.选择器\n伪类选择器：nth-child(n)/ntj-last-child(n),nth-of-type(n)/nth-last-of-type,first-child/last-child,disabled/enabled...")]),t._v(" "),a("p",[t._v("4.transition过渡\ntransition： CSS属性，花费时间，效果曲线(默认ease)，延迟时间(默认0)")]),t._v(" "),a("p",[t._v("5.animation 动画\nanimation：动画名称，一个周期花费时间，运动曲线（默认ease），动画延迟（默认0），播放次数（默认1），是否反向播放动画（默认normal），是否暂停动画（默认running）")]),t._v(" "),a("p",[t._v("6.transform 形状转换\ntransform:rotate旋转\ntransform:translate（）平移\ntransform:scale()缩放")]),t._v(" "),a("p",[t._v("7.rgba(rbg为颜色值，a为透明度)")]),t._v(" "),a("p",[t._v("8.Filter(滤镜)")]),t._v(" "),a("p",[t._v("9.flex,grid布局")]),t._v(" "),a("h3",{attrs:{id:"foreach-和-map的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreach-和-map的区别"}},[t._v("#")]),t._v(" forEach 和 map的区别")]),t._v(" "),a("p",[t._v("都能遍历数组，实现")]),t._v(" "),a("p",[t._v("都有三个参数 （currentVaule,index,arr）")]),t._v(" "),a("p",[t._v("forEach 没有返回值 如果进行数值操作会改变原数组 没有办法跳出或终止forEach循环")]),t._v(" "),a("p",[t._v("map 返回一个数组  进行数组操作不会改变原数组")]),t._v(" "),a("h2",{attrs:{id:"em-和-rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#em-和-rem"}},[t._v("#")]),t._v(" em 和 rem")]),t._v(" "),a("p",[t._v("em和rem都是相对长度单位，不同的是em是相对于腹父级元素的字体尺寸，rem相对于HTML的根元素")]),t._v(" "),a("p",[t._v("em的值并不是固定的，会继承父级元素的字体大小")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n<html>\n    <div>\n        <p> 你猜我字体是多大？</p>\n    </div>\n</html>\n/******css样式*********/\nhtml{\n    font-size:62.5% // font-size:10px 1em:10px\n}\ndiv{\n    font-size:1.2em //font-size: 10 *1.2 =12px\n}\np{\n    font-size:1.2em //font-size= 12*1.2=14.4px\n}\n \n")])])]),a("p",[t._v("使用rem单位，html的字体默认字体大小必须设置为12px或以上。若小于12px则浏览器换算时自动默认字体为12px。")]),t._v(" "),a("h2",{attrs:{id:"cdn-内容分发网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-内容分发网络"}},[t._v("#")]),t._v(" CDN 内容分发网络")]),t._v(" "),a("p",[t._v("CDN的基本原理是广泛采用各种"),a("a",{attrs:{href:"https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=8230101&ss_c=ssc.citiao.link",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存服务器"),a("OutboundLink")],1),t._v("，将这些缓存服务器分布到用户访问相对集中的地区或网络中，在用户访问网站时，利用全局负载技术将用户的访问指向距离最近的工作正常的缓存服务器上，由缓存服务器直接响应用户请求。")]),t._v(" "),a("h2",{attrs:{id:"请求放式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求放式"}},[t._v("#")]),t._v(" 请求放式")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("GET。请求指定的页面信息，返回实体主体。")])]),t._v(" "),a("li",[a("p",[t._v("POST。向指定资源提交数据进行处理请求，如表单提交或文件上传")])]),t._v(" "),a("li",[a("p",[t._v("PUT。从客户端向服务器传达的数据取代指定的文档内容")])]),t._v(" "),a("li",[a("p",[t._v("DELETE。请求服务器删除指定页面")]),t._v(" "),a("p",[t._v("200-删除成功")]),t._v(" "),a("p",[t._v("202-删除成功，但没有立即执行")]),t._v(" "),a("p",[t._v("204--删除请求已经被执行，但是没有返回资源")])]),t._v(" "),a("li",[a("p",[t._v("OPTIONS。允许客户端查看服务器的性能。")])]),t._v(" "),a("li",[a("p",[t._v("HEAD。类似于GET，只是用于获取报头")])]),t._v(" "),a("li",[a("p",[t._v("CONNECT。HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器")])]),t._v(" "),a("li",[a("p",[t._v("TRACT 。回显服务器收到的请求，用于测试或诊断")])])]),t._v(" "),a("h2",{attrs:{id:"原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[t._v("#")]),t._v(" 原型和原型链")]),t._v(" "),a("p",[a("strong",[t._v("原型")]),t._v("：每一个构造函数内部都有一个prototype属性，这个属性是一个对象，这个对象包含了可以由该构造函数的所有实例共享的属性和方法。")]),t._v(" "),a("p",[t._v("原型链：当我们访问一个对象的属性时，如果这个对象的内部不存在这个属性，那么它就会去它的原型对象里找这个属性，这个原型对象又有自己的原型，所以会一直找下去")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/24/16dfb64428ee0ce4?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("构造函数的prototype属性指向原型对象，原型对象有一个constructor属性指回构造函数；每个构造函数可以new生成实例对象，这个实例对象有个__proto__属性指向原型对象\n")])])]),a("h2",{attrs:{id:"get-和-post的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post的区别"}},[t._v("#")]),t._v(" GET 和 POST的区别")]),t._v(" "),a("ul",[a("li",[t._v("参数角度：GET请求参数一般放在URL中，不安全；POST请求放在请求体中，更适合传输敏感信息")]),t._v(" "),a("li",[t._v("缓存角度：GET会被浏览器缓存下来；POST不会；")]),t._v(" "),a("li",[t._v("编码角度：GET请求只能进行URL编码，只能接受ASCII码；POST没有限制")]),t._v(" "),a("li",[t._v("幂等角度：GET是幂等的，对数据没有副作用；POST不是（幂等指的是执行相同的操作，结果也是相同的）")]),t._v(" "),a("li",[t._v("TCP角度：GET请求会把请求报文一次性发出去；POST分为两个TCP数据包，首先发header部分，如果服务器响应100（continue）,然后发送body部分。（Firefox只发送一次）")]),t._v(" "),a("li",[t._v("GET无害，刷新、后退等浏览器操作GET都是无害的；POST可能重复提交表单")])])])}),[],!1,null,null,null);s.default=e.exports}}]);