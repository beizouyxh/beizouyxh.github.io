(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{375:function(t,s,a){"use strict";a.r(s);var e=a(45),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-知识点"}},[t._v("#")]),t._v(" Vue 知识点")]),t._v(" "),a("h2",{attrs:{id:"v-show-与-v-if-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-show-与-v-if-有什么区别"}},[t._v("#")]),t._v(" v-show 与 v-if 有什么区别")]),t._v(" "),a("p",[t._v("v-if 是真正的条件渲染，如果为假则什么也不做，直到为真才开始渲染。适合不需要频繁切换条件的场景。")]),t._v(" "),a("p",[t._v('v-show：不管条件是什么都会被渲染，简单的基于css的“display"属性进行切换。适用于需要非常频繁的切换条件的场景。')]),t._v(" "),a("h2",{attrs:{id:"vue-的单向数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-的单向数据流"}},[t._v("#")]),t._v(" vue 的单向数据流")]),t._v(" "),a("p",[a("strong",[t._v("父组件的prop 的更新会使得子组件所有的prop得到更新，但是反过来不行。")])]),t._v(" "),a("p",[t._v("这样可以防止子组件随意修改父组件的状态，只能通过$emit派发一个自定义事件，父组件接收后由父组件修改。")]),t._v(" "),a("h2",{attrs:{id:"vue生命周期的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期的理解"}},[t._v("#")]),t._v(" vue生命周期的理解")]),t._v(" "),a("p",[a("strong",[t._v("vue的生命周期指一个vue实例从创建、初始化、编译模板、挂载dom->渲染、更新->渲染、卸载等一系列过程")])]),t._v(" "),a("ol",[a("li",[t._v("beforeCreate中拿不到任何数据，它在实例初始化之后，数据观测和事件配置之前被调用。")]),t._v(" "),a("li",[t._v("created中可以拿到data中的数据，但是dom还没有挂载。会判断有无el,如果没有el则停止后面的模板挂载。ajax请求和页面初始化。")]),t._v(" "),a("li",[t._v("beforeMount和created拿到的数据相同，在挂载之前被调用，相关的render函数首次被调用")]),t._v(" "),a("li",[t._v("mounted被创建dom已经更新。常用于获取VNode信息和操作，ajax请求")]),t._v(" "),a("li",[t._v("beforeUpdate和updataed使用比较少，一般用计算属性和watch代替")]),t._v(" "),a("li",[t._v("destoryed实例销毁后调用，调用后所有事件的监听器被移除，子实例也会被销毁")])]),t._v(" "),a("h3",{attrs:{id:"vue父组件和子组件生命周期钩子函数执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue父组件和子组件生命周期钩子函数执行顺序"}},[t._v("#")]),t._v(" vue父组件和子组件生命周期钩子函数执行顺序")]),t._v(" "),a("ul",[a("li",[t._v("加载渲染过程")])]),t._v(" "),a("p",[t._v("​        父 beforeCreate -> 父 created -> 父 beforeMount -> 子 beforeCreate -> 子       created -> 子 beforeMount -> 子 mounted -> 父 mounted")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("子组件更新过程")]),t._v(" "),a("p",[t._v("父 beforeUpdate -> 子 beforeUpdate -> 子 updated -> 父 updated")])]),t._v(" "),a("li",[a("p",[t._v("父组件更新过程")]),t._v(" "),a("p",[t._v("父 beforeUpdate -> 父 updated")])]),t._v(" "),a("li",[a("p",[t._v("销毁过程")]),t._v(" "),a("p",[t._v("父 beforeDestroy -> 子 beforeDestroy -> 子 destroyed -> 父 destroyed")])])]),t._v(" "),a("h3",{attrs:{id:"在哪个生命周期内调用异步请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在哪个生命周期内调用异步请求"}},[t._v("#")]),t._v(" 在哪个生命周期内调用异步请求")]),t._v(" "),a("p",[t._v("created周期")]),t._v(" "),a("p",[t._v("能更快获取到服务器数据，减少页面加载的时间。")]),t._v(" "),a("p",[t._v("SSR不支持beforeMount、mounted钩子函数")]),t._v(" "),a("h3",{attrs:{id:"在什么阶段操作dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在什么阶段操作dom"}},[t._v("#")]),t._v(" 在什么阶段操作DOM")]),t._v(" "),a("p",[t._v("mounted钩子函数")]),t._v(" "),a("h2",{attrs:{id:"组件中data-为什么是函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件中data-为什么是函数"}},[t._v("#")]),t._v(" 组件中data 为什么是函数？")]),t._v(" "),a("p",[t._v("因为组件是用来复用的，如果组件中的data是一个对象，子组件中的data属性会相互影响。如果是函数，组件实例中的data属性不会相互影响。")]),t._v(" "),a("p",[t._v("new vue的实例不会被复用")]),t._v(" "),a("h2",{attrs:{id:"v-model原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model原理"}},[t._v("#")]),t._v(" v-model原理")]),t._v(" "),a("p",[t._v("v-model指令在表单input,textarea,select等元素上创建双向绑定")]),t._v(" "),a("p",[t._v("1.在表单元素上做了事件监听")]),t._v(" "),a("p",[t._v("2.如果值发生了变化时，在事件回调函数把最新的值设置到vue实例上")]),t._v(" "),a("p",[t._v("3.因为vue的实例已经实现了数据的响应化，他的响应化的set函数会触发，通知界面中所有模型的依赖的更新")]),t._v(" "),a("h2",{attrs:{id:"vue组件通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue组件通信方式"}},[t._v("#")]),t._v(" vue组件通信方式")]),t._v(" "),a("p",[t._v("1.props / $emit   父子组件通信")]),t._v(" "),a("p",[t._v("2.EventBus($emit /  $on)   父子、兄弟、隔代通信")]),t._v(" "),a("p",[t._v("3.provide / inject 隔代组件通信")]),t._v(" "),a("p",[t._v("4.vuex     父子、兄弟、隔代")]),t._v(" "),a("h2",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" vuex")]),t._v(" "),a("p",[t._v("vuex是vue的状态管理系统，核心是store仓库，包含着大部分状态state")]),t._v(" "),a("p",[t._v("好处：")]),t._v(" "),a("p",[t._v("1.集中管理共享数据，易于开发和后期维护\n2.实现组件之间的通信，提高开发效率\n3.响应式，能够实时保持数据和页面的同步\n特点;")]),t._v(" "),a("p",[t._v("​          1.vuex响应式的，组件从store读取状态时，如果状态发生变化，相应组件状态也会更新")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("      2. 改变store中的转态唯一途径是显示提交mutation\n")])])]),a("p",[t._v("模块：")]),t._v(" "),a("ul",[a("li",[t._v("state: 提供唯一的公共数据源，所有共享的数据都要统一放到Store 的state中进行存储 ,使用：在要使用的组件中this.$store.state.属性；或在computed中...mapState([属性])")]),t._v(" "),a("li",[t._v("Getter: 允许组件从store中获取数据(只起到包装作用，不会修改)，this.$store.getters.名称和...mapGetters辅助函数仅仅是将store中的getter映射到局部计算属性")]),t._v(" "),a("li",[t._v("mutation: 修改store中的状态(不允许组件中修改状态)，this.$store.commit('mutation中的方法')触发和...mapMutations，同步函数,不能执行异步函数;")]),t._v(" "),a("li",[t._v("action: 用于提交mutation ，this.$store.dispatch和mapActions不变更状态，可以包含任何异步操作")]),t._v(" "),a("li",[t._v("module:允许将单一的store拆分为多个store,且同时保存单一的状态树中。")])]),t._v(" "),a("h2",{attrs:{id:"vue-ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-ssr"}},[t._v("#")]),t._v(" Vue SSR")]),t._v(" "),a("p",[t._v("SSR就是vue在客户端将标签渲染成整个html片段的过程在服务端完成，服务端形成的html片段再返回个客户端的过程叫服务端渲染。")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[a("h5",{attrs:{id:"更好的seo-因为直接从服务端返回已经渲染好的页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更好的seo-因为直接从服务端返回已经渲染好的页面"}},[t._v("#")]),t._v(" 更好的SEO,因为直接从服务端返回已经渲染好的页面")])]),t._v(" "),a("li",[a("p",[t._v("首屏加载时间更快：无需等待下载js文件后再去渲染")])])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("更多的开发条件限制：因为服务器端渲染只支持beforeCreate 和 created两个钩子函数，会导致一些外部扩展库需要特殊处理才能在服务端运行，需要处于node.js server中运行")]),t._v(" "),a("li",[t._v("更多的服务器负载")])]),t._v(" "),a("h3",{attrs:{id:"vue-router-路由模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-路由模式"}},[t._v("#")]),t._v(" vue-router 路由模式")]),t._v(" "),a("p",[t._v("hash 、 history  、 abstract")]),t._v(" "),a("h2",{attrs:{id:"mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),a("p",[t._v("Model --View --ViewModel模式，促进了前后端的分离，提高了开发效率。")]),t._v(" "),a("p",[t._v("核心是ViewModel 向上与视图层进行双向绑定，向下与model层通过接口请求进行数据交互，起到承上启下作用")]),t._v(" "),a("p",[t._v("View：视图层，也就是用户界面。由html和css来构建")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("click"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"showMessage()"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Click me"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Model：数据模型层，后端进行各种业务逻辑处理和数据操控，为前端提供api接口")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/your/server/data/api"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"res"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IoveC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"domain"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.cnblogs.com"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("ViewModel:视图数据层")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于描述视图状态   ")]),t._v("\n        message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello Vue!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于描述视图行为  ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ajax 获取 Model 层的数据")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/your/server/data/api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"vue实现数据双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue实现数据双向绑定"}},[t._v("#")]),t._v(" Vue实现数据双向绑定")]),t._v(" "),a("p",[t._v("4个步骤")]),t._v(" "),a("ol",[a("li",[t._v("实现一个监听器Observer:对数据对象进行遍历，利用Object.definePrototype()数据劫持，利用getter和setter对数据进行获取和赋值，实现数据的监听")]),t._v(" "),a("li",[t._v("实现一个解析器Compile:扫描解析每个节点的相关指令，根据初始化模板数据以及初始化相应的订阅器。")]),t._v(" "),a("li",[t._v("实现一个订阅者Watcher:Watcher订阅者是Observer 和 Compie之间的通信桥梁，根据订阅Observer属性值变化的消息，触发解析器")]),t._v(" "),a("li",[t._v("实现一个订阅器Dep:订阅器采用发布-订阅模式，收集订阅者watcher，对监听器和订阅者进行统一管理")])]),t._v(" "),a("h2",{attrs:{id:"proxy-与-object-defineproperty-优劣对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy-与-object-defineproperty-优劣对比"}},[t._v("#")]),t._v(" Proxy 与 Object.defineProperty 优劣对比")]),t._v(" "),a("p",[a("strong",[t._v("Proxy 的优势如下:")])]),t._v(" "),a("ul",[a("li",[t._v("Proxy 可以直接监听对象而非属性；")]),t._v(" "),a("li",[t._v("Proxy 可以直接监听数组的变化；")]),t._v(" "),a("li",[t._v("Proxy 有多达 13 种拦截方法,不限于 apply、ownKeys、deleteProperty、has 等等是 Object.defineProperty 不具备的；")]),t._v(" "),a("li",[t._v("Proxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而 Object.defineProperty 只能遍历对象属性直接修改；")]),t._v(" "),a("li",[t._v("Proxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；")])]),t._v(" "),a("p",[a("strong",[t._v("Object.defineProperty 的优势如下:")])]),t._v(" "),a("ul",[a("li",[t._v("兼容性好，支持 IE9，而 Proxy 的存在浏览器兼容性问题,而且无法用 polyfill 磨平")])]),t._v(" "),a("h2",{attrs:{id:"虚拟dom的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的实现原理"}},[t._v("#")]),t._v(" 虚拟DOM的实现原理")]),t._v(" "),a("ul",[a("li",[t._v("用JavaScript对象模拟真实DOM树，对真实DOM进行抽象")]),t._v(" "),a("li",[t._v("diff算法 --比较两颗虚拟DOM树的差异")]),t._v(" "),a("li",[t._v("pach算法--将两个虚拟DOM对象的差异应用到真正的DOM树。")])]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("保证性能下限：")])]),t._v(" "),a("li",[a("strong",[t._v("不需要手动操作DOM：")])]),t._v(" "),a("li",[a("strong",[t._v("跨平台")]),t._v("：虚拟DOM本质是javascript,   而DOM与平台强相关")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("p",[a("strong",[t._v("无法进行极致优化")])]),t._v(" "),a("h2",{attrs:{id:"computed和watch的区别和使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed和watch的区别和使用场景"}},[t._v("#")]),t._v(" computed和watch的区别和使用场景")]),t._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("p",[a("strong",[t._v("computed计算属性")]),t._v("：依赖其他属性值，并且computed的值有"),a("strong",[t._v("缓存")]),t._v("，只有它依赖的属性值发生改变，下一次获取computed的值才会重新计算computed的值。")]),t._v(" "),a("p",[a("strong",[t._v("watch侦听器")]),t._v("：起到【观察】的作用，当"),a("strong",[t._v("监听的数据变化时都会执行回调")]),t._v("进行后续操作，"),a("strong",[t._v("无缓存性")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),a("p",[t._v("当我们需要进行"),a("strong",[t._v("数据计算")]),t._v("，并且依赖于其他数据时，使用computed，"),a("strong",[t._v("有缓存，避免每次获取值时都要重新计算。")])]),t._v(" "),a("p",[t._v("当我们需要在"),a("strong",[t._v("数据变化时执行异步或开销较大的操作")]),t._v("时，使用watch,允许我们执行异步操作，限制我们执行该操作的频率。")]),t._v(" "),a("h2",{attrs:{id:"vue中的key有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue中的key有什么用"}},[t._v("#")]),t._v(" Vue中的key有什么用？")]),t._v(" "),a("p",[t._v("key是给每一V-node的唯一id,依靠key可是更准确、更快速的进行diff操作")]),t._v(" "),a("p",[t._v("diff算法过程中，对新旧节点进行对比，当无法匹配时用新节点的key与旧节点进行对比，从而找到相应的旧节点。避免了重复渲染")])])}),[],!1,null,null,null);s.default=r.exports}}]);